// <auto-generated />
using System;
using Defold;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Defold.Migrations
{
    [DbContext(typeof(DefoldDbContext))]
    [Migration("20241001042518_uploaded_files_and_file_chunks")]
    partial class uploaded_files_and_file_chunks
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Defold.Models.FileChunk", b =>
                {
                    b.Property<string>("Bucket")
                        .HasColumnType("text");

                    b.Property<string>("Key")
                        .HasColumnType("text");

                    b.Property<long>("ChunkIndex")
                        .HasColumnType("bigint");

                    b.Property<string>("ChunkHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Bucket", "Key", "ChunkIndex");

                    b.HasIndex("Bucket", "Key");

                    b.ToTable("FileChunks");
                });

            modelBuilder.Entity("Defold.Models.UploadedFile", b =>
                {
                    b.Property<string>("Bucket")
                        .HasColumnType("text");

                    b.Property<string>("Key")
                        .HasColumnType("text");

                    b.Property<string>("ContentType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("UploadedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Bucket", "Key");

                    b.ToTable("UploadedFiles");
                });

            modelBuilder.Entity("Defold.Models.FileChunk", b =>
                {
                    b.HasOne("Defold.Models.UploadedFile", "File")
                        .WithMany("Chunks")
                        .HasForeignKey("Bucket", "Key")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("File");
                });

            modelBuilder.Entity("Defold.Models.UploadedFile", b =>
                {
                    b.Navigation("Chunks");
                });
#pragma warning restore 612, 618
        }
    }
}
